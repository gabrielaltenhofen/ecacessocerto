//Biblotecas----------------------------------------------------------------------
#include <Keypad.h>
#include <PN532.h>
#include <PN532_HSU.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

// Declaração de Objetos----------------------------------------------------------
PN532_HSU pn532hsu(Serial2);
PN532 nfc(pn532hsu);

const uint8_t ROWS = 4;
const uint8_t COLS = 4;

//Matriz tabela-------------------------------------------------------------------
char keys[ROWS][COLS] = {
  { 'D', 'C', 'B', 'A' },
  { '#', '9', '6', '3' },
  { '0', '8', '5', '2' },
  { '*', '7', '4', '1' }
};

uint8_t colPins[COLS] = { 4, 0, 2, 15 };
uint8_t rowPins[ROWS] = { 33, 32, 19, 18 };

const uint8_t ledPin = 12;
const uint8_t ledPin2 = 13;


uint8_t data1[16] = { 0x53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);
String senhaDigitada = "";

//Dados do Wifi--------------------------------------------------------------------
const char* ssid = "SETREM-1101";
const char* password = "";

//Declarações do setup-------------------------------------------------------------
void setup() {
  Serial.begin(115200);
  Serial.println("NDEF Reader");

  nfc.begin();
  uint32_t versiondata = nfc.getFirmwareVersion();
  if (!versiondata) {
    Serial.print("Não encontrei a placa PN53x.");
    while (1);
  }
  nfc.SAMConfig();
  Serial.println("Aguardando um cartão NFC...");

  pinMode(ledPin, OUTPUT);
  pinMode(ledPin2, OUTPUT);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Conectando ao WiFi...");
  }
  Serial.println("Conectado ao WiFi");
}

// Funções do loop------------------------------------------------------------------
void loop() {
  char key = keypad.getKey();

  if (key) {
    Serial.println(key);

    if (key == 'A') {
      senhaDigitada = "";
    } else if (key == 'D') {
      verificaSenha(senhaDigitada);
    } else {
      if (key == ('B')) {
        delay(1000);
        verificarteg();
      }
      senhaDigitada += key;
    }
  }
}

void verificaSenha(String senhaDigitada) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    // Link da API para verificar o código
    String url = "https://apiacessocerto.vercel.app/verificar-codigo/" + senhaDigitada;
    http.begin(url);

    int httpCode = http.GET();

    if (httpCode > 0) {
      String payload = http.getString();
      Serial.println(httpCode);
      Serial.println(payload);

      DynamicJsonDocument doc(1024);
      DeserializationError error = deserializeJson(doc, payload);

      if (error) {
        Serial.print("Erro na desserialização do JSON: ");
        Serial.println(error.c_str());
      } else {
        const char* resultado = doc["resultado"];

        if (strcmp(resultado, "Acesso liberado") == 0) {
          digitalWrite(ledPin, HIGH);
          Serial.println("Senha correta! LED ligado.");
          delay(1000);
          digitalWrite(ledPin, LOW);
        } else if (strcmp(resultado, "Acesso negado") == 0) {
          Serial.println("Senha incorreta! Tente novamente.");
          digitalWrite(ledPin2, HIGH);
          delay(1000);
          digitalWrite(ledPin2, LOW);
        } else {
          Serial.println("Resposta desconhecida da API");
        }
      }
    } else {
      Serial.println("Erro na requisição HTTP");
    }

    http.end();
  }
}
void verificarteg() {
  uint8_t success;
  uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 };
  uint8_t uidLength = 0;

  nfc.SAMConfig();

  success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength);
  if (success) {
    Serial.print("Card ID: ");
    for (uint8_t i = 0; i < uidLength; i++) {
      Serial.print(uid[i] < 0x10 ? "0" : "");
      Serial.print(uid[i], HEX);
    }
    Serial.println("");

    // Obter o código da tag lida pelo PN532
    String tagPN532 = "";
    for (uint8_t i = 0; i < uidLength; i++) {
      tagPN532 += uid[i] < 0x10 ? "0" : "";
      tagPN532 += String(uid[i], HEX);
    }

    // Fazer a solicitação HTTP para a API
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;

      String url = "https://apiacessocerto.vercel.app/entrada-tag?usuario=" + tagPN532;
      http.begin(url);

      int httpCode = http.GET();

      if (httpCode > 0) {
        String payload = http.getString();
        Serial.println(httpCode);
        Serial.println(payload);

        DynamicJsonDocument doc(1024);
        deserializeJson(doc, payload);

        const char* message = doc["message"];
        if (strcmp(message, "Entrada autorizada - Tag ativa!") == 0) {
          digitalWrite(ledPin, HIGH);
          Serial.println("Tag correta! LED ligado!");
          Serial.println("Porta liberada!");
          delay(1000);
          digitalWrite(ledPin, LOW);
        } else {
          Serial.println("Tag Inválida! Tente novamente.");
          digitalWrite(ledPin2, HIGH);
          delay(1000);
          digitalWrite(ledPin2, LOW);
        }
      } else {
        Serial.println("Erro na requisição HTTP");
      }
      http.end();
    }
  }
}
